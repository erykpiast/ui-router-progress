angular.module("ui-router-progress.event-emitter",[]).factory("EventEmitter",function(){function a(){this._eventsHandlers={}}return angular.extend(a.prototype,{on:function(a,b){var c=this._eventsHandlers[a]||(this._eventsHandlers[a]=[]);return c.push(b),function(){for(var a=0,d=c.length;d>a;a++)if(c[a]===b){c.splice(a,1);break}}},emit:function(a){var b=this._eventsHandlers[a];if(b){var c,d,e,f=[{name:a,defaultPrevented:!1,stopPropagation:function(){c=!0},preventDefault:function(){this.defaultPrevented=!0}}];for(e=1,d=arguments.length;d>e;e++)f.push(arguments[e]);for(e=0,d=b.length;d>e&&(b[e].apply(null,f),!c);e++);}}}),a}),angular.module("ui-router-progress",["ui-router-progress.state-progress-monitor","ui-router-progress.state-progress-indicator"]),angular.module("ui-router-progress.state-progress-indicator",["ui-router-progress.state-progress-monitor"]).directive("uiStateProgressIndicator",["stateProgressMonitor",function(a){return{restrict:"A",link:function(b,c){var d=a.on("show",function(){c.addClass("is-loading")}),e=a.on("hide",function(){c.removeClass("is-loading")});b.$on("destroy",function(){d(),e()})}}}]),angular.module("ui-router-progress.state-progress-monitor",["ui-router-progress.event-emitter"]).factory("stateProgressMonitor",["$rootScope","EventEmitter",function(a,b){function c(a,b){-1!==f.indexOf(b.name)&&g.emit("show")}function d(){g.emit("hide")}function e(a){if(angular.isDefined(a)){if(angular.isString(a))return void f.push(a);if(angular.isString(a.name))return void f.push(a.name)}throw new Error("argument have to be state object or state name")}var f=[],g=new b;return a.$on("$stateChangeStart",c),a.$on("$stateChangeSuccess",d),a.$on("$stateChangeError",d),a.$on("$stateNotFound",d),{include:e,on:g.on.bind(g)}}]);